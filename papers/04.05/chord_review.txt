Reviewer's Name: Jeff McGovern
Paper Title: Chord A Scalable Peer-to-peer Lookup Service for Internet
Provide a short summary of the paper: Chord is a type of hash table with keys distributed uniformly over a networked cluster of nodes in a flat hierarchy. Chord divides the keys evenly among the nodes, as is the search space, so that any node only knows about log(N) other nodes, where N is the total number of nodes, allowing for fast update across the cluster when a node joins or leaves.
What are the strengths of the paper? (1-3 sentences): The authors of the paper present a very strong argument for how fast their algorithm is. Their approach is grounded in a fairly solid theoretical framework, providing proof for the design decisions in Chord.
What are the weaknesses of the paper? (1-3 sentences): Experimental validation is limited to a simulation and a small real world test, with little comparison to existing solutions. Chord, in the beginning, is presented as a wild card drop in replacement for a myriad of existing solutions, but little is done to show that Chord is actually effective in the wild.
Overall paper merit (1 [worst] - 10 [best] ): 6
Provide detailed comments (expand on strengths/weaknesses; >= 2 paragraphs): The authors do a good job presenting Chord as a provably fast algorithm. Proofs referenced throughout the paper (and assumed to be correct) lend credence to the theoretical speed of the algorithm. Additionally, the explanation reads like a math proof, setting up and delivering the explanations effectively.

Where I find the paper to be weakest is in the experimental validation. In the beginning of the paper, the authors show quite a few examples of where Chord can either match or outperform existing solutions to the problems Chord can solve. By the end of the paper, the authors address none of that. Experimental results are simply statements of numbers and their various statistical properties. They attempt no comparisons and no evidence that Chord outperforms any existing software out there, save for the underlying algorithm having an equal or better order of growth. The authors provide no reference or grounding for their "results," simply descriptions of the data and how once can consider it important. 
